import React, {FormEvent, useEffect, useState} from 'react';
import Head from "next/head";
import axios from "axios";
import {useAppDispatch, useAppSelector} from "../redux/store";
import {register} from "../redux/thunks/authThunks";
import {selectAuth} from "../redux/slices/authSlice";

const Auth = () => {
    const dispatch = useAppDispatch();
    const {status, token} = useAppSelector(selectAuth);

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');

    useEffect(() => {
        console.log("token changed", token)
    }, [token]);


    useEffect(() => {
        switch (status) {
            case 200:
                alert('Logged in successfully');
                break;
            case 401:
                alert('Invalid credentials');
                break;
            case 201:
                alert('Registered successfully');
                break;
            case 400:
                alert('Invalid credentials');
                break;
            default:
                break;

        }
    }, [status]);

    const handleSubmit = async (e: FormEvent) => {
        e.preventDefault();

        dispatch(register({email, password, firstName, lastName}));
    };

    return (
        <>
            <Head>
                <title>joeri - about</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/icon.svg"/>
            </Head>
            <main>
                <form onSubmit={handleSubmit} className="mt-20">
                    {/*create a nice looking form body with tailwind for email, password, first name and last name and a submit button*/}
                    {/*<input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="email"/>*/}
                    {/*<input type="password" value={password} onChange={(e) => setPassword(e.target.value)}/>*/}
                    {/*<input type="text" value={firstName} onChange={(e) => setFirstName(e.target.value)}/>*/}
                    {/*<input type="text" value={lastName} onChange={(e) => setLastName(e.target.value)}/>*/}
                    {/*<button type="submit">Register</button>*/}

                    <div
                        className="flex flex-col items-center justify-center min-h-screen py-2 -mt-56 px-14 text-center">
                        <div
                            className="flex flex-col items-center justify-center w-full max-w-md px-4 py-6 space-y-8 bg-white border-2 border-gray-300 rounded-lg shadow-xl">
                            <div className="flex flex-col items-center justify-center w-full space-y-2">
                                <h1 className="text-3xl font-bold text-gray-900">Register</h1>
                                <p className="text-sm text-gray-500">Already have an account? <button
                                    className="font-medium text-indigo-600 hover:text-indigo-500">Login</button>
                                </p>
                            </div>
                            <div className="w-full space-y-6">
                                <div className="flex flex-col w-full space-y-1">
                                    <label htmlFor="email" className="text-sm font-medium text-gray-900">Email</label>
                                    <input type="email" value={email} onChange={(e) => setEmail(e.target.value)}
                                           placeholder="email" id="email"
                                           className="w-full px-4 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500"/>
                                </div>
                                <div className="flex flex-col w-full space-y-1">
                                    <label htmlFor="password"
                                           className="text-sm font-medium text-gray-900">Password</label>
                                    <input type="password" value={password}
                                           onChange={(e) => setPassword(e.target.value)} placeholder="password"
                                           id="password"
                                           className="w-full px-4 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500"/>
                                </div>
                                <div className="flex flex-col w-full space-y-1">
                                    <label htmlFor="firstName" className="text-sm font-medium text-gray-900">First
                                        Name</label>
                                    <input type="text" value={firstName}
                                           onChange={(e) => setFirstName(e.target.value)}
                                           placeholder="first name" id="firstName"
                                           className="w-full px-4 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500"/>
                                </div>
                                <div className="flex flex-col w-full space-y-1">
                                    <label htmlFor="lastName" className="text-sm font-medium text-gray-900">Last
                                        Name</label>
                                    <input type="text" value={lastName}
                                           onChange={(e) => setLastName(e.target.value)}
                                           placeholder="last name" id="lastName"
                                           className="w-full px-4 py-2 text-sm text-gray-900 border border-gray-300 rounded-md focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500"/>
                                </div>
                                <div>
                                    <button type="submit"
                                            className="w-full px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500">Register
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </main>
        </>
    );
};

export default Auth;
